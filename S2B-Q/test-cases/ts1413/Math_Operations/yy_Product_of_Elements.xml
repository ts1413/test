<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<sm:blocks xmlns:sm="http://example.com/SimulinkModel" name="Product_of_Elements" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://example.com/SimulinkModel SimulinkModel.xsd">
  <file name="Product_of_Elements_ert_rtw/Product_of_Elements.h" size="2531" timestamp="2015-10-05T16:08:19+0900" type="c-header"/>
  <file name="xx_Product_of_Elements.xml" size="1421" timestamp="2015-10-07T15:40:41+0900" type="xml"/>
  <file name="Product_of_Elements_ert_rtw/Product_of_Elements.c" size="1576" timestamp="2015-10-05T16:08:19+0900" type="c-source"/>
  <block blocktype="Inport" id="1" name="Product_of_Elements_In1" priority="0" rate="0.1">
    <output line="Product_of_Elements_In1_1" port="Product_of_Elements_In1_1" usename="true">
      <connect block="Product_of_Elements_ProductofElements" port="Product_of_Elements_ProductofElements_1"/>
    </output>
    <var line="Product_of_Elements_In1_1" mode="extin" name="Product_of_Elements_In1_1" port="Product_of_Elements_In1_1" type="real_T"/>
    <code file="Product_of_Elements_ert_rtw/Product_of_Elements.c" line="51" type="init">  Product_of_Elements_In1_1 = 0.0;
</code>
    <forward block="Product_of_Elements_ProductofElements" type="data">
      <var line="Product_of_Elements_In1_1" mode="input" name="Product_of_Elements_In1_1" port="Product_of_Elements_ProductofElements_1" type="real_T"/>
    </forward>
  </block>
  <block blocktype="Product" id="2" name="Product_of_Elements_ProductofElements" priority="1" rate="0.1">
    <input line="Product_of_Elements_In1_1" port="Product_of_Elements_ProductofElements_1">
      <connect block="Product_of_Elements_In1" port="Product_of_Elements_In1_1"/>
    </input>
    <output line="Product_of_Elements_ProductofElements_1" port="Product_of_Elements_ProductofElements_1" usename="true">
      <connect block="Product_of_Elements_Out1" port="Product_of_Elements_Out1_1"/>
    </output>
    <var line="Product_of_Elements_In1_1" mode="input" name="Product_of_Elements_In1_1" port="Product_of_Elements_ProductofElements_1" type="real_T"/>
    <var line="Product_of_Elements_ProductofElements_1" mode="extout" name="Product_of_Elements_ProductofElements_1" port="Product_of_Elements_ProductofElements_1" type="real_T"/>
    <code file="Product_of_Elements_ert_rtw/Product_of_Elements.c" line="31" type="task">  /* Product: '&lt;Root&gt;/ProductofElements' incorporates:
   *  Inport: '&lt;Root&gt;/In1'
   */
  Product_of_Elements_ProductofElements_1 = Product_of_Elements_In1_1;
</code>
    <code file="Product_of_Elements_ert_rtw/Product_of_Elements.c" line="48" type="init">  Product_of_Elements_ProductofElements_1 = 0.0;

</code>
    <forward block="Product_of_Elements_Out1" type="data">
      <var line="Product_of_Elements_ProductofElements_1" mode="input" name="Product_of_Elements_ProductofElements_1" port="Product_of_Elements_Out1_1" type="real_T"/>
    </forward>
    <backword block="Product_of_Elements_In1" type="data">
      <var line="Product_of_Elements_In1_1" mode="extin" name="Product_of_Elements_In1_1" port="Product_of_Elements_In1_1" type="real_T"/>
    </backword>
  </block>
  <block blocktype="Outport" id="3" name="Product_of_Elements_Out1" priority="2" rate="0.1">
    <input line="Product_of_Elements_ProductofElements_1" port="Product_of_Elements_Out1_1">
      <connect block="Product_of_Elements_ProductofElements" port="Product_of_Elements_ProductofElements_1"/>
    </input>
    <var line="Product_of_Elements_ProductofElements_1" mode="input" name="Product_of_Elements_ProductofElements_1" port="Product_of_Elements_Out1_1" type="real_T"/>
    <backword block="Product_of_Elements_ProductofElements" type="data">
      <var line="Product_of_Elements_ProductofElements_1" mode="extout" name="Product_of_Elements_ProductofElements_1" port="Product_of_Elements_ProductofElements_1" type="real_T"/>
    </backword>
  </block>
  <code type="rt-macro">/* Macros for accessing real-time model data structure */
#ifndef rtmGetErrorStatus
# define rtmGetErrorStatus(rtm)        ((rtm)-&gt;errorStatus)
#endif

#ifndef rtmSetErrorStatus
# define rtmSetErrorStatus(rtm, val)   ((rtm)-&gt;errorStatus = (val))
#endif

</code>
  <code type="rt-type">/* Real-time Model Data Structure */
struct tag_RTM_Product_of_Elements {
  const char_T * volatile errorStatus;
};
</code>
  <object kind="rtm-extern" name="Product_of_Elements_M" type="extern RT_MODEL_Product_of_Elements * const"/>
  <object kind="rtm-object" name="Product_of_Elements_M_" type="RT_MODEL_Product_of_Elements"/>
  <object kind="rtm-pointer" name="Product_of_Elements_M" type="RT_MODEL_Product_of_Elements * const" value="&amp;Product_of_Elements_M_"/>
  <includes file="&lt;stddef.h>" from="Product_of_Elements_ert_rtw/Product_of_Elements.h" index="0"/>
  <includes file="&quot;rtwtypes.h&quot;" from="Product_of_Elements_ert_rtw/Product_of_Elements.h" index="1"/>
  <includes file="&quot;Product_of_Elements_types.h&quot;" from="Product_of_Elements_ert_rtw/Product_of_Elements.h" index="2"/>
  <includes file="&quot;Product_of_Elements_private.h&quot;" from="Product_of_Elements_ert_rtw/Product_of_Elements.c" index="3"/>
</sm:blocks>

<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<sm:blocks xmlns:sm="http://example.com/SimulinkModel" name="LookupTableDynamic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://example.com/SimulinkModel SimulinkModel.xsd">
  <file name="LookupTableDynamic_ert_rtw/LookupTableDynamic.h" size="3266" timestamp="2015-10-05T16:57:13+0900" type="c-header"/>
  <file name="xx_LookupTableDynamic.xml" size="2488" timestamp="2015-10-07T15:40:44+0900" type="xml"/>
  <file name="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" size="5195" timestamp="2015-10-05T16:57:13+0900" type="c-source"/>
  <block blocktype="Inport" id="1" name="LookupTableDynamic_In1" priority="0" rate="0.1">
    <output line="LookupTableDynamic_In1_1" port="LookupTableDynamic_In1_1" usename="true">
      <connect block="LookupTableDynamic_LookupTableDynamic" port="LookupTableDynamic_LookupTableDynamic_1"/>
    </output>
    <var line="LookupTableDynamic_In1_1" mode="extin" name="LookupTableDynamic_In1_1" port="LookupTableDynamic_In1_1" type="real_T"/>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="144" type="init">  LookupTableDynamic_In1_1 = 0.0;

</code>
    <forward block="LookupTableDynamic_LookupTableDynamic" type="data">
      <var line="LookupTableDynamic_In1_1" mode="input" name="LookupTableDynamic_In1_1" port="LookupTableDynamic_LookupTableDynamic_1" type="real_T"/>
    </forward>
  </block>
  <block blocktype="Constant" id="2" name="LookupTableDynamic_Constant" priority="1" rate="0.1">
    <output line="LookupTableDynamic_Constant_1" port="LookupTableDynamic_Constant_1" usename="true">
      <connect block="LookupTableDynamic_LookupTableDynamic" port="LookupTableDynamic_LookupTableDynamic_2"/>
    </output>
    <var line="LookupTableDynamic_Constant_1" mode="output" name="LookupTableDynamic_Constant_1" port="LookupTableDynamic_Constant_1" size="3" type="real_T"/>
    <param name="Constant_Value" size="3" storage="LookupTableDynamic_P" type="real_T"/>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="100" type="task">  /* Constant: '&lt;Root&gt;/Constant' */
  LookupTableDynamic_Constant_1[0] = LookupTableDynamic_P.Constant_Value[0];
  LookupTableDynamic_Constant_1[1] = LookupTableDynamic_P.Constant_Value[1];
  LookupTableDynamic_Constant_1[2] = LookupTableDynamic_P.Constant_Value[2];

</code>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="135" type="init">  LookupTableDynamic_Constant_1[0] = 0.0;
  LookupTableDynamic_Constant_1[1] = 0.0;
  LookupTableDynamic_Constant_1[2] = 0.0;
  /* Start for Constant: '&lt;Root&gt;/Constant' */
  LookupTableDynamic_Constant_1[0] = LookupTableDynamic_P.Constant_Value[0];
  LookupTableDynamic_Constant_1[1] = LookupTableDynamic_P.Constant_Value[1];
  LookupTableDynamic_Constant_1[2] = LookupTableDynamic_P.Constant_Value[2];

</code>
    <forward block="LookupTableDynamic_LookupTableDynamic" type="data">
      <var line="LookupTableDynamic_Constant_1" mode="input" name="LookupTableDynamic_Constant_1" port="LookupTableDynamic_LookupTableDynamic_2" size="3" type="real_T"/>
    </forward>
  </block>
  <block blocktype="Constant" id="3" name="LookupTableDynamic_Constant1" priority="2" rate="0.1">
    <output line="LookupTableDynamic_Constant1_1" port="LookupTableDynamic_Constant1_1" usename="true">
      <connect block="LookupTableDynamic_LookupTableDynamic" port="LookupTableDynamic_LookupTableDynamic_3"/>
    </output>
    <var line="LookupTableDynamic_Constant1_1" mode="output" name="LookupTableDynamic_Constant1_1" port="LookupTableDynamic_Constant1_1" size="3" type="real_T"/>
    <param name="Constant1_Value" size="3" storage="LookupTableDynamic_P" type="real_T"/>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="105" type="task">  /* Constant: '&lt;Root&gt;/Constant1' */
  LookupTableDynamic_Constant1_1[0] = LookupTableDynamic_P.Constant1_Value[0];
  LookupTableDynamic_Constant1_1[1] = LookupTableDynamic_P.Constant1_Value[1];
  LookupTableDynamic_Constant1_1[2] = LookupTableDynamic_P.Constant1_Value[2];

</code>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="138" type="init">  LookupTableDynamic_Constant1_1[0] = 0.0;
  LookupTableDynamic_Constant1_1[1] = 0.0;
  LookupTableDynamic_Constant1_1[2] = 0.0;
  /* Start for Constant: '&lt;Root&gt;/Constant1' */
  LookupTableDynamic_Constant1_1[0] = LookupTableDynamic_P.Constant1_Value[0];
  LookupTableDynamic_Constant1_1[1] = LookupTableDynamic_P.Constant1_Value[1];
  LookupTableDynamic_Constant1_1[2] = LookupTableDynamic_P.Constant1_Value[2];
</code>
    <forward block="LookupTableDynamic_LookupTableDynamic" type="data">
      <var line="LookupTableDynamic_Constant1_1" mode="input" name="LookupTableDynamic_Constant1_1" port="LookupTableDynamic_LookupTableDynamic_3" size="3" type="real_T"/>
    </forward>
  </block>
  <block blocktype="Simulink_LookupTableDynamic" id="4" name="LookupTableDynamic_LookupTableDynamic" priority="3" rate="0.1">
    <input line="LookupTableDynamic_In1_1" port="LookupTableDynamic_LookupTableDynamic_1">
      <connect block="LookupTableDynamic_In1" port="LookupTableDynamic_In1_1"/>
    </input>
    <input line="LookupTableDynamic_Constant_1" port="LookupTableDynamic_LookupTableDynamic_2">
      <connect block="LookupTableDynamic_Constant" port="LookupTableDynamic_Constant_1"/>
    </input>
    <input line="LookupTableDynamic_Constant1_1" port="LookupTableDynamic_LookupTableDynamic_3">
      <connect block="LookupTableDynamic_Constant1" port="LookupTableDynamic_Constant1_1"/>
    </input>
    <output line="LookupTableDynamic_LookupTableDynamic_1" port="LookupTableDynamic_LookupTableDynamic_1" usename="true">
      <connect block="LookupTableDynamic_Out1" port="LookupTableDynamic_Out1_1"/>
    </output>
    <var line="LookupTableDynamic_In1_1" mode="input" name="LookupTableDynamic_In1_1" port="LookupTableDynamic_LookupTableDynamic_1" type="real_T"/>
    <var line="LookupTableDynamic_Constant_1" mode="input" name="LookupTableDynamic_Constant_1" port="LookupTableDynamic_LookupTableDynamic_2" size="3" type="real_T"/>
    <var line="LookupTableDynamic_Constant1_1" mode="input" name="LookupTableDynamic_Constant1_1" port="LookupTableDynamic_LookupTableDynamic_3" size="3" type="real_T"/>
    <var line="LookupTableDynamic_LookupTableDynamic_1" mode="extout" name="LookupTableDynamic_LookupTableDynamic_1" port="LookupTableDynamic_LookupTableDynamic_1" type="real_T"/>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="110" type="task">  /* Dynamic Look-Up Table Block: '&lt;Root&gt;/LookupTableDynamic'
   * Input0  Data Type:  Floating Point real_T
   * Input1  Data Type:  Floating Point real_T
   * Input2  Data Type:  Floating Point real_T
   * Output0 Data Type:  Floating Point real_T
   * Lookup Method: Linear_Endpoint
   *
   */
  LookUp_real_T_real_T( &amp;(LookupTableDynamic_LookupTableDynamic_1),
                       &amp;LookupTableDynamic_Constant1_1[0],
                       LookupTableDynamic_In1_1, &amp;LookupTableDynamic_Constant_1
                       [0], 2U);
</code>
    <code file="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" line="141" type="init">  LookupTableDynamic_LookupTableDynamic_1 = 0.0;

</code>
    <forward block="LookupTableDynamic_Out1" type="port">
      <var line="LookupTableDynamic_LookupTableDynamic_1" mode="input" name="LookupTableDynamic_LookupTableDynamic_1" port="LookupTableDynamic_Out1_1" type="real_T"/>
    </forward>
    <backword block="LookupTableDynamic_Constant" type="data">
      <var line="LookupTableDynamic_Constant_1" mode="output" name="LookupTableDynamic_Constant_1" port="LookupTableDynamic_Constant_1" size="3" type="real_T"/>
    </backword>
    <backword block="LookupTableDynamic_Constant1" type="data">
      <var line="LookupTableDynamic_Constant1_1" mode="output" name="LookupTableDynamic_Constant1_1" port="LookupTableDynamic_Constant1_1" size="3" type="real_T"/>
    </backword>
    <backword block="LookupTableDynamic_In1" type="data">
      <var line="LookupTableDynamic_In1_1" mode="extin" name="LookupTableDynamic_In1_1" port="LookupTableDynamic_In1_1" type="real_T"/>
    </backword>
  </block>
  <block blocktype="Outport" id="5" name="LookupTableDynamic_Out1" priority="4" rate="0.1">
    <input line="LookupTableDynamic_LookupTableDynamic_1" port="LookupTableDynamic_Out1_1">
      <connect block="LookupTableDynamic_LookupTableDynamic" port="LookupTableDynamic_LookupTableDynamic_1"/>
    </input>
    <var line="LookupTableDynamic_LookupTableDynamic_1" mode="input" name="LookupTableDynamic_LookupTableDynamic_1" port="LookupTableDynamic_Out1_1" type="real_T"/>
    <backword block="LookupTableDynamic_LookupTableDynamic" type="port">
      <var line="LookupTableDynamic_LookupTableDynamic_1" mode="extout" name="LookupTableDynamic_LookupTableDynamic_1" port="LookupTableDynamic_LookupTableDynamic_1" type="real_T"/>
    </backword>
  </block>
  <code type="rt-macro">/* Macros for accessing real-time model data structure */
#ifndef rtmGetErrorStatus
# define rtmGetErrorStatus(rtm)        ((rtm)-&gt;errorStatus)
#endif

#ifndef rtmSetErrorStatus
# define rtmSetErrorStatus(rtm, val)   ((rtm)-&gt;errorStatus = (val))
#endif

</code>
  <code type="rt-type">/* Real-time Model Data Structure */
struct tag_RTM_LookupTableDynamic_T {
  const char_T * volatile errorStatus;
};
</code>
  <object kind="rtm-extern" name="LookupTableDynamic_M" type="extern RT_MODEL_LookupTableDynamic_T * const"/>
  <object kind="rtm-object" name="LookupTableDynamic_M_" type="RT_MODEL_LookupTableDynamic_T"/>
  <object kind="rtm-pointer" name="LookupTableDynamic_M" type="RT_MODEL_LookupTableDynamic_T * const" value="&amp;LookupTableDynamic_M_"/>
  <includes file="&lt;stddef.h>" from="LookupTableDynamic_ert_rtw/LookupTableDynamic.h" index="0"/>
  <includes file="&quot;rtwtypes.h&quot;" from="LookupTableDynamic_ert_rtw/LookupTableDynamic.h" index="1"/>
  <includes file="&quot;LookupTableDynamic_types.h&quot;" from="LookupTableDynamic_ert_rtw/LookupTableDynamic.h" index="2"/>
  <includes file="&quot;LookupTableDynamic_private.h&quot;" from="LookupTableDynamic_ert_rtw/LookupTableDynamic.c" index="3"/>
  <function name="BINARYSEARCH_real_T" type="defn">
    <code line="32" type="func">/* Lookup Binary Search Utility BINARYSEARCH_real_T */
void BINARYSEARCH_real_T(uint32_T *piLeft, uint32_T *piRght, real_T u, const
  real_T *pData, uint32_T iHi)
{
  /* Find the location of current input value in the data table. */
  *piLeft = 0U;
  *piRght = iHi;
  if (u &lt;= pData[0] ) {
    /* Less than or equal to the smallest point in the table. */
    *piRght = 0U;
  } else if (u &gt;= pData[iHi] ) {
    /* Greater than or equal to the largest point in the table. */
    *piLeft = iHi;
  } else {
    uint32_T i;

    /* Do a binary search. */
    while (( *piRght - *piLeft ) &gt; 1U ) {
      /* Get the average of the left and right indices using to Floor rounding. */
      i = (*piLeft + *piRght) &gt;&gt; 1;

      /* Move either the right index or the left index so that */
      /*  LeftDataPoint &lt;= CurrentValue &lt; RightDataPoint */
      if (u &lt; pData[i] ) {
        *piRght = i;
      } else {
        *piLeft = i;
      }
    }
  }
}
</code>
  </function>
  <function name="LookUp_real_T_real_T" type="defn">
    <code line="64" type="func">/* Lookup Utility LookUp_real_T_real_T */
void LookUp_real_T_real_T(real_T *pY, const real_T *pYData, real_T u, const
  real_T *pUData, uint32_T iHi)
{
  uint32_T iLeft;
  uint32_T iRght;
  BINARYSEARCH_real_T( &amp;(iLeft), &amp;(iRght), u, pUData, iHi);

  {
    real_T lambda;
    if (pUData[iRght] &gt; pUData[iLeft] ) {
      real_T num;
      real_T den;
      den = pUData[iRght];
      den = den - pUData[iLeft];
      num = u;
      num = num - pUData[iLeft];
      lambda = num / den;
    } else {
      lambda = 0.0;
    }

    {
      real_T yLeftCast;
      real_T yRghtCast;
      yLeftCast = pYData[iLeft];
      yRghtCast = pYData[iRght];
      yLeftCast += lambda * ( yRghtCast - yLeftCast );
      (*pY) = yLeftCast;
    }
  }
}
</code>
    <function name="BINARYSEARCH_real_T" type="defn"/>
  </function>
</sm:blocks>
